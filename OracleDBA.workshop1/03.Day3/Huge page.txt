-- Khi gặp các vấn đề sau:
+ ORA-04030: out of process memory
+ poor performance of the database, slow sessions, slow queries
+ low free physical memory on the system or swapping
+++++++++++++++++++++++++++++++++++++++++++++++++++
IF  
  SGA >= 2GB AND sessions >= 500
THEN
enabling HugePages becomes a requirement on Linux 64-bit system.
+++++++++++++++++++++++++++++++++++++++++++++++++++
Examples:
For a database with:

sga_target = 250G
sessions= 5000
a. before configuring HugePages we see a huge 'buff/cache' of 209Gb almost equal to the SGA
free -g
         total   used   free   shared   buff/cache   available
Mem: 503      118    175       201    209            181
Swap: 19         1     18

b. after configuring  HugePages, 'buff/cache' drops by 95% and 'free' memory increase considerably
free -g
          total   used   free   shared   buff/cache   available
Mem:  503    210    283       0         10              291
Swap: 19         1      18
--
[oracle@ocm ~]$ grep MemTotal /proc/meminfo
MemTotal:        7857256 kB
-- Kiem tra DB
SQL> show parameter memory_target

NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
memory_target                        big integer 0
==> huge page không dùng được cho AMM (auto memory management) với memory_target set khác 0
SQL> show parameter sga_target

NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
sga_target                           big integer 1G
--> phù hợp để sử dụng huge page
SQL> show parameter use_large_pages

NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
use_large_pages                      string      TRUE
-- Kiem tra OS
[oracle@ocm ~]$ grep Hugepagesize /proc/meminfo
Hugepagesize:       2048 kB
-- Tính số Hugepages: SGA / Hugepagesize = Number Hugepages
1024M/2M=512 page
--> Nen dung script cua Oracle de tinh
[root@ocm ~]# vi hugepage_setting.sh
#!/bin/bash
#
# hugepages_settings.sh
#
# Linux bash script to compute values for the
# recommended HugePages/HugeTLB configuration
# on Oracle Linux
#
# Note: This script does calculation for all shared memory
# segments available when the script is run, no matter it
# is an Oracle RDBMS shared memory segment or not.
#
# This script is provided by Doc ID 401749.1 from My Oracle Support
# http://support.oracle.com

# Welcome text
echo "
This script is provided by Doc ID 401749.1 from My Oracle Support
(http://support.oracle.com) where it is intended to compute values for
the recommended HugePages/HugeTLB configuration for the current shared
memory segments on Oracle Linux. Before proceeding with the execution please note following:
 * For ASM instance, it needs to configure ASMM instead of AMM.
 * The 'pga_aggregate_target' is outside the SGA and
   you should accommodate this while calculating the overall size.
 * In case you changes the DB SGA size,
   as the new SGA will not fit in the previous HugePages configuration,
   it had better disable the whole HugePages,
   start the DB with new SGA size and run the script again.
And make sure that:
 * Oracle Database instance(s) are up and running
 * Oracle Database 11g Automatic Memory Management (AMM) is not setup
   (See Doc ID 749851.1)
 * The shared memory segments can be listed by command:
     # ipcs -m


Press Enter to proceed..."

read

# Check for the kernel version
KERN=`uname -r | awk -F. '{ printf("%d.%d\n",$1,$2); }'`

# Find out the HugePage size
HPG_SZ=`grep Hugepagesize /proc/meminfo | awk '{print $2}'`
if [ -z "$HPG_SZ" ];then
    echo "The hugepages may not be supported in the system where the script is being executed."
    exit 1
fi

# Initialize the counter
NUM_PG=0

# Cumulative number of pages required to handle the running shared memory segments
for SEG_BYTES in `ipcs -m | cut -c44-300 | awk '{print $1}' | grep "[0-9][0-9]*"`
do
    MIN_PG=`echo "$SEG_BYTES/($HPG_SZ*1024)" | bc -q`
    if [ $MIN_PG -gt 0 ]; then
        NUM_PG=`echo "$NUM_PG+$MIN_PG+1" | bc -q`
    fi
done

RES_BYTES=`echo "$NUM_PG * $HPG_SZ * 1024" | bc -q`

# An SGA less than 100MB does not make sense
# Bail out if that is the case
if [ $RES_BYTES -lt 100000000 ]; then
    echo "***********"
    echo "** ERROR **"
    echo "***********"
    echo "Sorry! There are not enough total of shared memory segments allocated for
HugePages configuration. HugePages can only be used for shared memory segments
that you can list by command:

    # ipcs -m

of a size that can match an Oracle Database SGA. Please make sure that:
 * Oracle Database instance is up and running
 * Oracle Database 11g Automatic Memory Management (AMM) is not configured"
    exit 1
fi

# Finish with results
case $KERN in
    '2.4') HUGETLB_POOL=`echo "$NUM_PG*$HPG_SZ/1024" | bc -q`;
           echo "Recommended setting: vm.hugetlb_pool = $HUGETLB_POOL" ;;
    '2.6') echo "Recommended setting: vm.nr_hugepages = $NUM_PG" ;;
    '3.8') echo "Recommended setting: vm.nr_hugepages = $NUM_PG" ;;
    '3.10') echo "Recommended setting: vm.nr_hugepages = $NUM_PG" ;;
    '4.1') echo "Recommended setting: vm.nr_hugepages = $NUM_PG" ;;
    '4.14') echo "Recommended setting: vm.nr_hugepages = $NUM_PG" ;;
    '4.18') echo "Recommended setting: vm.nr_hugepages = $NUM_PG" ;;
    '5.4') echo "Recommended setting: vm.nr_hugepages = $NUM_PG" ;;
    '5.15') echo "Recommended setting: vm.nr_hugepages = $NUM_PG" ;;
    *) echo "Kernel version $KERN is not supported by this script (yet). Exiting." ;;
esac

# End
--
[root@ocm ~]# chmod 775 hugepage_setting.sh
[root@ocm ~]# ./hugepage_setting.sh
. . .
Recommended setting: vm.nr_hugepages = 519
-- Su vao root
[root@ocm ~]# vi /etc/sysctl.conf
vm.nr_hugepages=519
-- Tinh 
minimum Memlock=Number Hugepages * Hugepagesize 
=519*2M=1062912 k
-- Đơn vị la kb
vi /etc/security/limits.conf
*               soft    memlock 1062912
*               hard    memlock 1062912
vi /etc/security/limits.d/oracle-database-preinstall-19c.conf
oracle   hard   memlock   1062912
oracle   soft   memlock    1062912
-- Disable default huge page
[root@ocm ~]# cat /sys/kernel/mm/transparent_hugepage/enabled
always madvise [never]
[root@ocm ~]# echo never > /sys/kernel/mm/transparent_hugepage/enabled
-- reboot
-- Xem trong alert log
  PAGESIZE  AVAILABLE_PAGES  EXPECTED_PAGES  ALLOCATED_PAGES  ERROR(s)
2023-12-29T10:47:58.831604+07:00
        4K       Configured              11             850        NONE
2023-12-29T10:47:58.831748+07:00
     2048K              512             513             511        NONE
--
[root@ocm ~]# ulimit -l
1062912
-- Force sử dụng huge page
ALTER SYSTEM SET use_large_pages=only SCOPE=SPFILE;
startup force
SQL> show parameter large

NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
large_pool_size                      big integer 0
use_large_pages                      string      ONLY
-- alert log
 Available system pagesizes:
  4K, 2048K
2023-12-29T13:29:11.642786+07:00
 Supported system pagesize(s):
2023-12-29T13:29:11.642833+07:00
  PAGESIZE  AVAILABLE_PAGES  EXPECTED_PAGES  ALLOCATED_PAGES  ERROR(s)
2023-12-29T13:29:11.642948+07:00
     2048K              519             514             514        NONE



